%{~ if docker_image_repository != null || docker_image_tag != null ~}
image:
  %{~ if docker_image_repository != null ~}
  repository: ${docker_image_repository}
  %{~ endif ~}
  %{~ if docker_image_tag != null ~}
  tag: "${docker_image_tag}"
  %{~ endif ~}
%{~ endif ~}

imagePullSecrets:
%{ if docker_image_pull_secret != null ~}
  - name: ${docker_image_pull_secret}
%{~ else ~}
  - name: omd-registry-credentials
%{~ endif }

config:
  %{~ if agent_id != null ~}
  agentId: "${agent_id}"
  %{~ endif ~}
  authToken: ${collate_auth_token}
  serverHostApiUrl: "https://${collate_server_domain}/api"
  serverUrl: "wss://${collate_server_domain}"
  secretsManager: "managed-azure-kv"
  ingestionPods:
  %{~ if ingestion != null ~} 
    %{~ if ingestion.image != null ~}
    %{~ if ingestion.image.repository != null && ingestion.image.tag != null ~}
    baseImage: "${ingestion.image.repository}:${ingestion.image.tag}"
    %{~ endif ~}
    %{~ endif ~}
    imagePullSecrets: "${ingestion.image.pull_secrets != null ? ingestion.image.pull_secrets : "omd-registry-credentials"}"
    %{~ if ingestion.extra_envs != null ~}
    extraEnvs: ${ingestion.extra_envs}
    %{~ endif ~}
  %{~ else ~}
    extraEnvs: "AZURE_KEY_VAULT_NAME:${azure_key_vault_name}"
  %{~ endif ~}
    serviceAccount:
      annotations:
        "azure.workload.identity/client-id": "${ingestion_client_id}"
      %{~ if ingestion != null ~}	
      %{~ if ingestion.pod_annotations != null ~}	
        %{~ for key, value in ingestion.pod_annotations ~}
        "${key}": "${value}"
        %{~ endfor ~}
      %{~ endif ~}
      %{~ endif ~}
      automount: true
  argoWorkflows:
    %{~ if argowf.provisioner == "helm" ~}
    endpoint: "http://argo-workflows-${environment}-server.${argowf.namespace}.svc:2746"
    %{~ else ~}
    %{~ if argowf.provisioner == "existing" ~}
    endpoint: ${argowf.endpoint}
    %{~ endif ~}
    %{~ endif ~}
serviceMonitor:
  enabled: ${service_monitor_enabled}
