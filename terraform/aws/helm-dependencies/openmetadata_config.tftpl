openmetadata:
  config:
    pipelineServiceClientConfig:
      className: io.collate.pipeline.argo.ArgoServiceClient
      apiEndpoint: http://argo-workflows-server.argowf.svc:2746
      metadataApiEndpoint: http://openmetadata.${namespace}.svc:8585/api
      auth:
        enabled: false
    authorizer:
      initialAdmins: ${initial_admins}
      principalDomain: ${principal_domain}
    elasticsearch:
      host: ${es_host}
      port: ${es_port}
      scheme: ${es_scheme}
      auth:
        enabled: true
        username: ${es_username}
        password:
          secretRef: ${es_secret}
          secretKey: ${es_secret_key}
    database:
      host: ${db_host}
      port: ${db_port}
      driverClass: org.postgresql.Driver
      dbScheme: postgresql
      auth:
        username: ${db_user}
        password:
          secretRef: ${db_secret}
          secretKey: ${db_secret_key}
      dbParams: "allowPublicKeyRetrieval=true&useSSL=true&serverTimezone=UTC"

image:
  repository: ${image_name}
%{ if image_tag != "" ~}
  tag: ${image_tag}
%{ endif ~}
%{ if image_pull_policy != "" ~}
  pullPolicy: ${image_pull_policy}
%{ endif ~}
%{ if length(image_pull_secrets) > 0 ~}
imagePullSecrets:
%{ for ips in image_pull_secrets ~}
- name: ${ips}
%{ endfor ~}
%{ endif ~}
extraEnvs:
- name: ARGO_NAMESPACE
  value: ${workflows_execution_namespace}
- name: ARGO_TOKEN
  valueFrom:
    secretKeyRef:
      name: ${argowf_token}
      key: "token"
- name: ARGO_INGESTION_IMAGE
  value: ${ingestion_image_name}%{ if image_tag != "" }:${image_tag}%{ endif }
- name: ARGO_WORKFLOW_EXECUTOR_SERVICE_ACCOUNT_NAME
  value: ${argowf_sa}
%{ if length(image_pull_secrets) > 0 ~}
- name: ARGO_IMAGE_PULL_SECRETS
  value: "${ join(",", image_pull_secrets) }"
%{ endif ~}
